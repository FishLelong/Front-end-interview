/* src/pages/Migrations.svelte generated by Svelte v3.29.0 */
import {
	SvelteComponent,
	append,
	attr,
	component_subscribe,
	create_component,
	destroy_component,
	detach,
	element,
	init,
	insert,
	mount_component,
	safe_not_equal,
	space,
	transition_in,
	transition_out
} from "../../web_modules/svelte/internal.js";

import AllocationBreakdown from "../components/AllocationBreakdown.js";
import Balance from "../components/Balance.js";
import Etherscan from "../components/Etherscan.js";
import Farming from "../components/Farming.js";
import Info from "../components/Info.js";
import Migration from "../components/Migration.js";
import Quantstamp from "../components/Quantstamp.js";
import { currentRoute } from "../stores/routes.js";
import { getTokenImage } from "../components/helpers.js";

function create_fragment(ctx) {
	let div5;
	let div4;
	let div2;
	let div1;
	let div0;
	let farming;
	let t;
	let div3;
	let migration;
	let current;

	farming = new Farming({
			props: {
				token: /*$currentRoute*/ ctx[0].params.address
			}
		});

	migration = new Migration({
			props: {
				token: /*$currentRoute*/ ctx[0].params.address,
				method: /*$currentRoute*/ ctx[0].params.method,
				poolAction: /*$currentRoute*/ ctx[0].params.poolAction
			}
		});

	return {
		c() {
			div5 = element("div");
			div4 = element("div");
			div2 = element("div");
			div1 = element("div");
			div0 = element("div");
			create_component(farming.$$.fragment);
			t = space();
			div3 = element("div");
			create_component(migration.$$.fragment);
			attr(div0, "class", "left flex-1 mt-4 mr-4");
			attr(div1, "class", "flex hidden md:block");
			attr(div2, "class", "left flex-1");
			attr(div3, "class", "right w-full md:w-2/4 flex md:flex-1 md:ml-2");
			attr(div4, "class", "flex flex-col w-full flex-row-reverse md:flex-row");
			attr(div5, "class", "content flex flex-col");
		},
		m(target, anchor) {
			insert(target, div5, anchor);
			append(div5, div4);
			append(div4, div2);
			append(div2, div1);
			append(div1, div0);
			mount_component(farming, div0, null);
			append(div4, t);
			append(div4, div3);
			mount_component(migration, div3, null);
			current = true;
		},
		p(ctx, [dirty]) {
			const farming_changes = {};
			if (dirty & /*$currentRoute*/ 1) farming_changes.token = /*$currentRoute*/ ctx[0].params.address;
			farming.$set(farming_changes);
			const migration_changes = {};
			if (dirty & /*$currentRoute*/ 1) migration_changes.token = /*$currentRoute*/ ctx[0].params.address;
			if (dirty & /*$currentRoute*/ 1) migration_changes.method = /*$currentRoute*/ ctx[0].params.method;
			if (dirty & /*$currentRoute*/ 1) migration_changes.poolAction = /*$currentRoute*/ ctx[0].params.poolAction;
			migration.$set(migration_changes);
		},
		i(local) {
			if (current) return;
			transition_in(farming.$$.fragment, local);
			transition_in(migration.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(farming.$$.fragment, local);
			transition_out(migration.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(div5);
			destroy_component(farming);
			destroy_component(migration);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let $currentRoute;
	component_subscribe($$self, currentRoute, $$value => $$invalidate(0, $currentRoute = $$value));

	const tokensSwapOut = [
		{
			symbol: "USDC/ETH",
			address: "0xb4e16d0168e52d35cacd2c6185b44281ec28c9dc",
			balance: "0",
			type: "UniswapV2",
			containing: [
				{
					symbol: "USDC",
					address: "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",
					balance: "0",
					icon: getTokenImage("0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48")
				},
				{
					symbol: "ETH",
					address: "0x0000000000000000000000000000000000000000",
					balance: "0",
					icon: getTokenImage("eth")
				}
			]
		},
		{
			symbol: "DEFI+S/DAI",
			address: "0x7aefaf3ea1b465dd01561b0548c9fd969e3f76ba",
			type: "UniswapV2",
			balance: "0",
			containing: [
				{
					symbol: "DEFI+S",
					address: "0xaD6A626aE2B43DCb1B39430Ce496d2FA0365BA9C",
					balance: "0",
					icon: getTokenImage("0xad6a626ae2b43dcb1b39430ce496d2fa0365ba9c")
				},
				{
					symbol: "DAI",
					address: "0x6b175474e89094c44da98b954eedeac495271d0f",
					balance: "0",
					icon: getTokenImage("0x6B175474E89094C44Da98b954EedeAC495271d0F")
				}
			]
		}
	];

	return [$currentRoute];
}

class Migrations extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export default Migrations;